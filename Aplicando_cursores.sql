CREATE OR REPLACE FUNCTION INSTRUTORES_INTERNOS(ID_INSTRUTOR INTEGER) RETURNS REFCURSOR AS $$
	DECLARE
		CURSOR_SALARIOS REFCURSOR;
	BEGIN
		OPEN CURSOR_SALARIOS FOR SELECT INSTRUTOR.SALARIO
								  FROM INSTRUTOR
								 WHERE ID <> ID_INSTRUTOR
								   AND SALARIO > 0;
		
		RETURN CURSOR_SALARIOS;
	END;
$$ LANGUAGE PLPGSQL;


DROP FUNCTION CRIA_INSTRUTOR;
CREATE OR REPLACE FUNCTION CRIA_INSTRUTOR() RETURNS TRIGGER AS $$ 
	DECLARE
		MEDIA_SALARIAL DECIMAL;
		INSTRUTORES_RECEBEM_MENOS INTEGER DEFAULT 0;
		TOTAL_INSTRUTORES INTEGER DEFAULT 0;
		SALARIO DECIMAL;
		PERCENTUAL DECIMAL(10, 2);
		CURSOR_SALARIOS REFCURSOR;
	BEGIN
		SELECT AVG(INSTRUTOR.SALARIO) INTO MEDIA_SALARIAL FROM INSTRUTOR WHERE ID <> NEW.ID;
		
		IF NEW.SALARIO > MEDIA_SALARIAL THEN
			INSERT INTO LOG_INSTRUTORES (INFORMACAO) VALUES (NEW.NOME || ' Recebe acima da média');
		END IF;

		SELECT INSTRUTORES_INTERNOS(NEW.ID) INTO CURSOR_SALARIOS;
		LOOP
			FETCH CURSOR_SALARIOS INTO SALARIO;
			EXIT WHEN NOT FOUND;
			TOTAL_INSTRUTORES := TOTAL_INSTRUTORES + 1;

		RAISE NOTICE 'Salário inserido %, Salário do instrutor existente %', NEW.SALARIO, SALARIO;
			IF NEW.SALARIO > SALARIO THEN
				INSTRUTORES_RECEBEM_MENOS := INSTRUTORES_RECEBEM_MENOS + 1;
			END IF;
		END LOOP;

		PERCENTUAL = INSTRUTORES_RECEBEM_MENOS::DECIMAL / TOTAL_INSTRUTORES::DECIMAL * 100;
		ASSERT PERCENTUAL < 100::DECIMAL, 'Novos instrutores não podem receber mais do que todos os antigos';

		INSERT INTO LOG_INSTRUTORES (INFORMACAO)
			VALUES (NEW.NOME || ' Recebe mais do que ' || PERCENTUAL || '% da grade de instrutores');
		
		RETURN NEW;
	END;
$$ LANGUAGE PLPGSQL;

DROP TRIGGER CRIA_LOG_INSTRUTORES ON INSTRUTOR;
CREATE TRIGGER CRIA_LOG_INSTRUTORES
    BEFORE INSERT ON INSTRUTOR
    FOR EACH ROW
    EXECUTE FUNCTION CRIA_INSTRUTOR();


SELECT * FROM INSTRUTOR;
SELECT * FROM LOG_INSTRUTORES;

INSERT INTO INSTRUTOR (NOME, SALARIO) VALUES ('Fulano de tal 3', 1500);